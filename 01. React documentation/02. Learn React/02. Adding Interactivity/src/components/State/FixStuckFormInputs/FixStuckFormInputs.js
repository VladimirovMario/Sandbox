import { useState } from 'react';

export default function FixStuckFormInputs() {
  return (
    <>
      <h2>Challenge 2 of 4: Fix stuck form inputs</h2>
      <Form />
    </>
  );
}

function Form() {
  const [values, setValues] = useState({
    firstName: '',
    lastName: '',
  });

  /**
   * Updates the state with the new value when the name input field changes.
   *
   * This function is responsible for handling the change event of the input fields and updating the state accordingly.
   * It takes the event object as a parameter and updates the state by merging the existing state with the new field value.
   *
   * @param {Object} e - The event object generated by the name input field change event.
   * @returns {void}
   */
  function handleNameChange(e) {
    setValues((state) => ({ ...state, [e.target.name]: e.target.value }));
  }

  /**
   * Clears all input fields by setting their values to empty strings.
   *
   * This function takes an object containing field values as input and updates
   * all the values to empty strings, effectively clearing the input fields. It performs the following steps:
   *
   * 1. Retrieves the keys of the input object using Object.keys().
   * 2. Applies Array.prototype.map() to iterate over the keys and create an array of key-value pairs.
   * 3. Sets the value of each key to an empty string.
   * 4. Creates a new object using Object.fromEntries() from the modified array, where all values are empty strings.
   * 5. Assigns the newly created object to the state or updates the input fields accordingly.
   *
   * @param {Object} values - An object containing field values.
   * @returns {void}
   */
  function handleReset() {
    setValues(Object.fromEntries(Object.keys(values).map((key) => [key, ''])));
    // setValues(
    //   Object.fromEntries(Object.entries(values).map(([k, v]) => [k, (v = '')]))
    // );
  }

  return (
    <form onSubmit={(e) => e.preventDefault()}>
      <input
        type="text"
        placeholder="First name"
        name="firstName"
        value={values.firstName}
        onChange={handleNameChange}
      />
      <input
        type="text"
        placeholder="Last name"
        name="lastName"
        value={values.lastName}
        onChange={handleNameChange}
      />
      <h3>
        Hi, {values.firstName} {values.lastName}
      </h3>
      <button onClick={handleReset}>Reset</button>
    </form>
  );
}
